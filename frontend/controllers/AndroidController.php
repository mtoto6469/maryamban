<?php
namespace frontend\controllers;

use backend\models\Tblcolor;
use backend\models\tblsallerDriver;
use common\components\date_ir;
use common\components\jdf;
use common\models\LoginForm;
use common\models\User;
use frontend\models\SignupForm;
use frontend\models\Tblallpost;
use frontend\models\Tblbag;
use frontend\models\Tblbrand;
use frontend\models\Tblexist;
use frontend\models\Tblgallery;
use frontend\models\TblImg;
use frontend\models\Tblorder;
use frontend\models\Tblpardakht;
use frontend\models\TblPost;
use frontend\models\Tblproduct;
use frontend\models\Tblprofile;
use frontend\models\TblPrudect;
use frontend\models\Tblreplace;
use frontend\models\TblReserve;
use frontend\models\Tblsize;
use frontend\models\TblSodorFactor;
use frontend\models\TbltypeProduct;
use frontend\models\Tbluser;
use phpDocumentor\Reflection\Types\Array_;
use Symfony\Component\BrowserKit\Response;
use yii\rest\ActiveController;
use yii;
use frontend\models\PHPWebSocket;


/**
 * Country Controller API
 *
 * @author Budi Irawan <deerawan@gmail.com>
 */
class AndroidController extends ActiveController
{
    public $modelClass = 'frontend\models\Tblsize';


//     public function beforeAction($action)
// {

//           if(Yii::$app->controller->action->id == login){


//         }
//   return true;
// }


    public function init()
    {
    
         \Yii::$app->user->enableSession = false;
        if (\Yii::$app->request->authUser != null && \Yii::$app->request->authPassword != null) {

            $username = \Yii::$app->request->authUser;;
            $password = \Yii::$app->request->authPassword;
            $user = User::findByUsername($username);
            if ($user != null) {
                if ($user->validatePassword($password)) {
                    Yii::$app->getUser()->login($user);

                } else {
                    print "یوزر و پسورد شما اشتباه است";
                    exit;
                }
            }
        }

       parent::init(); 
    }


    public function behaviors()
    {
        $behaviors = parent::behaviors();
        $behaviors['authenticator'] = [
            'class' => yii\filters\auth\HttpBasicAuth::className(),
            'auth' => function ($user, $pass) {

                $user = User::findByUsername($user);
                if ($user != null) {
                    return $user;
                }

            },
            'only' => ['myorderse',],
        ];
        $behaviors['access'] = [

            'class' => yii\filters\AccessControl::className(),
            'only' => ['signup', 'login', 'cart', 'cooridn', 'sodorfactor', 'accountscharge', 'myorders', 'reject', 'Getdatabuy'],
            'rules' => [
                [
                    'actions' => ['signup', 'login', 'listreject'],
                    'allow' => true,
                    'roles' => ['?'],
                ],

                [
                    'actions' => ['getdatabuy', 'cart', 'cooridn', 'sodorfactor', 'accountscharge', 'myorders', 'login', 'listreject', 'reject', 'listorder'],
                    'allow' => true,
                    'roles' => ['costumer'],
                ],
            ],
        ];


        return $behaviors;
    }


    public function checkAccess($action, $model = null, $params = [])
    {
        return $model;
    }

    public function actions()
    {
        $action = parent::actions(); // TODO: Change the autogenerated stub
        unset($action['create']);
        return $action;
    }


    public function actionListorder()
    {
        $url = yii::$app->urlManager;
        $order2 = new Tblproduct();
        $brand = new Tblbrand();
        $type2 = new TbltypeProduct();
        $exis = new Tblexist();
        $Tprof = new Tblprofile();
        $prof = $Tprof->findOne(["user_id" => yii::$app->user->id]);


        $order = $order2->find()->andWhere(['enabel' => 1])->andWhere(['enabel_view' => 1])->all();

        if ($order != null) {
            foreach ($order as $var) {
                $exist = $exis->find()->where(["id_pro" => $var->id])->andWhere('exist>:exist', ["exist" => 0])->andWhere(['enabel_view' => 1])->all();
                if ($exist != null) {
                    $size2 = new Tblsize();
                    $color = new Tblcolor();
                    $brand2 = $brand->find()->where(["id" => $var->id_brand])->andWhere(['enabel_view' => 1])->one();
                    $type = $type2->find()->where(["id" => $var->id_type])->andWhere(['enabel_view' => 1])->one();
                    $size = $size2->find()->where(["id_pro" => $var->id])->andWhere(['enabel_view' => 1])->all();
                    if ($size != null) {
                        $arSize = null;
                        foreach ($size as $varSize) {
                            $arSize[] = $varSize->size;
                        }
                    } else {
                        $arSize = null;
                    }
                    $color = $color->find()->where(["id_pro" => $var->id])->andWhere(['enabel_view' => 1])->all();
                    if ($color != null) {
                        $arColor = null;
//                    $colorSize[]=null;
                        foreach ($color as $varSize) {
                            $colorSize = null;

                            $scol = $exis->find()->where(["id_pro" => $var->id])->andWhere(["color" => $varSize->color])->andWhere('exist!=:exist', ["exist" => 0])->andWhere(['enabel_view' => 1])->all();
                            if ($scol != null) {
                                $arColor["url"][] = $url->hostInfo . '/upload/' . $varSize->img;
                                $arColor["name"][] = $varSize->color;
                                foreach ($scol as $rowe) {
                                    $colorSize[] = $rowe->size;
                                }
                                $arColor["name"][]["size"] = $colorSize;

                            }

                        }
                    } else {
                        $arColor = null;
                    }
                    if ($brand2 != null) {
                        $row['brand'] = $brand->brand;
                    } else {
                        $row['brand'] = "مریم بانو";
                    }
                    $row['name'] = $var->name;
                    $row['type'] = $type->type;
                    $row['description'] = $var->description;
                    $row['price'] = $var->price_namayande;
                    $row['id'] = $var->id;
                    $row['time_ir'] = $var->time_ir;
                    $row['size'] = $arSize;
                    $row['color'] = $arColor;
                    $row["mande"] = $prof->mande;
                    $row['img'] = $url->hostInfo . '/upload/' . $var->img;
                    $result[] = $row;
                }
            }
            return $result;
        } else {
            print "0";
        }
    }


    public function actionDeletbag()
    {
        if ($_POST['id_all_post'] != null && isset($_POST['id_all_post'])
        ) {
            $p = $_POST['id_all_post'];
            $id_post = explode("-", $p);
            $priceFul = 0;
            $model = new Tblallpost();
            $res = -7;
            $i = 0;
                     foreach ($id_post as $var1) {
                $post1 = $model->findOne(["id" =>intval($var1)]);
                if ($post1 != null) { 
                    if($post1->id_fac != null ){
                                print " شما درخواست شماره  ".$post1->id ."را قبلا پرداخت کرده اید و امکان حذف آن وجود ندارد در صورت لزوم درخواست مرجوعی کنید";
                    exit();
                    }
                } else {
                    print "آدرس ها در جدول allpost موجود نیست";
                    exit();
                }
            }
            foreach ($id_post as $var) {
                $post = $model->findOne(["id" => $var]);
                if ($post != null) {
                    $post->delete();
                } else {
                    print "هیچ آدرسی برای این درخواست ها پیدا نشد";
                    exit();
                }
            }
            $set = new Tblbag();
            foreach ($id_post as $var) {
                $up = $set->find()->where(["id_all_post" => $var])->andWhere(["down_buy" => 0])->all();
                if ($up != null) {
                    foreach ($up as $mod) {
                        if ($mod->delete()) {
                         
                                $res = 1;
                       print $res;
                     exit;

                        } else {
                            $res = "در حذف اطلاعات مشکلی بوجود آمده است";
                     print $res;
                     exit;
                        }
                    }
                } else {
                     $res = "هیچ سفارشی در سبد خرید موجود نیست";
                     print $res;
                     exit;
                }
            }

        } else {
             $res = "اطلاعات ارسالی اشتباه است";
                     print $res;
                     exit;
        }
        print $res;
    }

    // this doing scharge account
    public function actionAccountscharge()
    {
        if ($_POST['price'] != null && isset($_POST['price'])
            && $_POST['date_u'] != null && isset($_POST['date_u'])
            && $_POST['peygiri'] != null && isset($_POST['peygiri'])
            && $_POST['end_number'] != null && isset($_POST['end_number'])
        ) {
            $mode = new Tblpardakht();
            $mode->id_user = yii::$app->user->id;
            $mode->id_fac = 0;
            $mode->end_number = $_POST['end_number'];
            $mode->price = $_POST['price'];
            $mode->date = date('Y/m/d');
            $mode->peygiri = $_POST['peygiri'];
            $mode->approve = 0;
            $mode->date_u = $_POST['date_u'];
            $mode->admin_description = "خواهشا تکمیل شود";
            $mode->enabel_view = 1;
            if ($mode->save()) {
                print "1";
                exit;
            } else {
                print "  در ذخیره اطلاعات مشکلی بوجود آمده است خواهشا دوباره بررسی کنید ";
                exit;
            }
        } else {
            print "در ارسال اطلاعات از طرف اپلیکیشن مشکلی وجود دارد  ";
            exit;
        }
    }

    /**
     * This is the model class for table "tblpardakht".
     *
     * @property integer $id
     * @property integer $enabel_view
     * بهرام صالحی, [19.04.18 10:04]
هماهنگی آدرس وقتی قبل از ارسال قطعی چند آدرس را می خواد با هم بفرستد
اینجا از اندروید همه آی دی آل پست های که میخواهد با یک آدرس جدید بفرستد از اپلیکیشن برای شما ارسال میشود
باید قیمت جدید محاسبه شود چون هر کدام از آی دی های آی پست یک هزینه ارسال دارد اما وقتی به یک آدرس ارسال می شوند تنها یک آدرس وجود دارد و یک هزینه پست
     */

    public function actionCooridn()
    {

        if ($_POST['id_all_post'] != null && isset($_POST['id_all_post'])
            && $_POST['type_post'] != null && isset($_POST['type_post'])
            && $_POST['adress'] != null && isset($_POST['adress'])
            && $_POST['tell'] != null && isset($_POST['tell'])
            && $_POST['name'] != null && isset($_POST['name'])
        ) {
            $p = $_POST['id_all_post'];
            $id_post = explode("-", $p);
            $priceFul = 0;
            $model = new Tblallpost();
            $i = 0;
            foreach ($id_post as $var1) {
                $post1 = $model->findOne(["id" =>intval($var1)]);
                if ($post1 != null) {
                    if($post1->id_fac =! null  ){
                      print " شما درخواست شماره  ".$post1->id ."را قبلا پرداخت و در خواست ارسال کرده اید برای این محصول امکان ارسال به آدرس جدید نیست";

                    exit();
                    }
                } else {
                    print "آدرس ها در جدول allpost موجود نیست";
                    exit();
                }
            }
            foreach ($id_post as $var) {
                $post = $model->findOne(["id" =>intval($var)]);
                
                    if ($post->name_post == "post") {
                        $price = $post->price - 12000;
                    } else
                        if ($post->name_post == "paik") {
                            $price = $post->price - 15000;
                        } else {
                            $price = $post->price;
                        }
                    $priceFul += $price;
                    $i++;
                    $post->delete();
          
            }

            $t_post = $_POST['type_post'];
            $h_post = 0;
            if ($t_post == "post") {
                $fee = $i * 2000;
                $h_post = 12000 + $fee;
            }
            if ($t_post == "paik") {
                $oi = $i-3;
                if($oi>0){
                   $fee = $i * 2000; 
                   $h_post = 15000 + $fee;
                }else{
                   $h_post = 15000 ; 
                }
                
            }
            if ($t_post == "tipax") {
                $h_post = 0;
            }

            $model->address = $_POST['adress'];
            $model->price_post = $h_post;
            $model->costomer = $_POST['name'];
            $model->tel = $_POST['tell'];
            $model->price = $h_post + $priceFul;
            $model->id_user = yii::$app->user->id;
            $model->down_buy = 0;
            $model->id_fac = 0;
            $model->name_post = $_POST['type_post'];
            if ($model->save(false)) {
                $res = "1";
            } else {
                $res = "در ذخیره اطلاعات مشکلی بوجود آمده است";
            }

            $set = new Tblbag();
            foreach ($id_post as $var) {
                $up = $set->find()->where(["id_all_post" => $var])->all();
                if ($up != null) {
                    foreach ($up as $mod) {
                        $mod->id_all_post = $model->id;

                        if ($mod->save()) {

                            if ($res != "در ذخیره اطلاعات مشکلی بوجود آمده است") {
//                              $res = "1";
                            } else {
                                $res = "در آب اطلاعات مشکلی بوجود آمده است";
                            }

                        } else {
                            if ($res != "در ذخیره اطلاعات مشکلی بوجود آمده است") {
                                $res = -3;
                            } else {
                                $res = -2;
                            }
                        }
                    }
                } else {
                    if ($res != -2 && $res != -3) {
                        $res = "متاسفانه این آدرس قبلا ثبت نشده است";
                    } else {
                        $res = -2;
                    }
                }
            }

        } else {
            $res = "در ارسال اطلاعات مشکلی وجود دارد";
        }
        print $res;
    }

 public function actionSodorfactor()
    {


        if ($_POST['id_all_post'] != null && isset($_POST['id_all_post'])
        ) {

            $mobag = new Tblbag();
            $profi = new Tblprofile();
            $factor = new TblSodorFactor();
            $p = $_POST['id_all_post'];

            $id_post = explode("-", $p);

            $priceFul = 0;
            $model = new Tblallpost();
            $i = 0;
                 foreach ($id_post as $var1) {
                $post1 = $model->findOne(["id" =>intval($var1)]);
                if ($post1 != null) {
                    if($post1->id_fac != null  ){
                            print "شما درخواست شماره ".$post1->id . "را قبلا پرداخت کرده اید";
                    exit();
                    }
                } else {
                    print "آدرس ها در جدول allpost موجود نیست";
                    exit();
                }
            }
            foreach ($id_post as $var) {
                $post = $model->findOne(["id" => $var]);

                if ($post != null) {
                    $priceFul += $post->price;

                } else {
                    print "هیچ آدرسی پیدا نشد";
                    exit();
                }
            }
            $profile = $profi->find()->where(["user_id" => yii::$app->user->id])->one();

            if ($profile != null) {
                $monde = $profile->mande;

                if ($monde == null) {
                    $monde = 0;
                }

                if ($monde < $priceFul) {
                    print "10";
                    exit;
                }
                $profile->mande = $profile->mande - $priceFul;

                if (!$profile->save()) {
                    print "مشکل در عدم کسر از حساب";
                    exit;
                }

            } else {
                print "اطلاعات شما در جدول پروفایل ناقص است";
                exit;
            }

            $factor->price = $priceFul;
            $factor->id_user = yii::$app->user->id;

            $data = new jdf();
            $factor->data_ir = $data->date('y/m/d');
            $factor->data = date('Y/m/d');

            $factor->resive = 0;
            $factor->visibel = 0;
            $factor->adress = "ندارد";
            $factor->code_off = 0;
            $factor->off = 0;
            $factor->confirm = 1;
            $factor->print = 0;
            $factor->description = "اعتباری از طریق اپلیکیشن پرداخت شد";

            if ($factor->save(false)) {
                foreach ($id_post as $var) {
                    $post = $model->findOne(["id" => $var]);
                    if ($post != null) {
                        $post->id_fac = $factor->id;
                        $post->down_buy = 1;
                        if ($post->save()) {
                            $bag = $mobag->find()->where(["id_all_post" => $post->id])->andWhere(["down_buy" => 0])->all();
                            if ($bag != null) {
                                foreach ($bag as $row) {
                                    $rowPost = $mobag->findOne(['id'=>$row->id]);
                                    $rowPost->down_buy = 1;
                                    $rowPost->id_fac = $factor->id;
                                    if ($rowPost->save()) {
                                        $exist = new Tblexist();
                                        $exi = $exist->find()->where(["id_pro" => $row->id_pro])->andWhere(["size" => $row->size])->andWhere(["color" => $row->color])->andWhere("exist !=:exist", ["exist" => 0])->one();
                                        if ($exi != null) {
                                            $exi->exist = $exi->exist - $row->count;
                                            if($exi->save()){
                                               print"2";
                                            exit; 
                                            }else{
                                                          $bag2 = $mobag->find()->where(["id" => $row->id])->one();
                                            $bag2->delete();
                                            $post2 = $model->findOne(["id" => $post->id]);
                                            $post2->id_fac = 0;
                                            $post2->down_buy = 0;
                                            $post2->save();
                                            $factor2 = new TblSodorFactor();
                                            $fac = $factor2->find()->where(["id" => $factor->id])->one();
                                            $fac->delete();
                                            $profile2 = $profi->find()->where(["user_id" => yii::$app->user->id])->one();
                                            $profile2->mande = $monde;
                                            $profile2->save();
                                            print "موجودی تمام شد";
                                            exit();
                                         
                                            }
                                            
                                        } else {
                                            $bag2 = $mobag->find()->where(["id" => $row->id])->one();
                                            $bag2->delete();
                                            $post2 = $model->findOne(["id" => $post->id]);
                                            $post2->id_fac = 0;
                                            $post2->down_buy = 0;
                                            $post2->save();
                                            $factor2 = new TblSodorFactor();
                                            $fac = $factor2->find()->where(["id" => $factor->id])->one();
                                            $fac->delete();
                                            $profile2 = $profi->find()->where(["user_id" => yii::$app->user->id])->one();
                                            $profile2->mande = $monde;
                                            $profile2->save();
                                            print "متاسفانه این جنس موجودیش چند ثانیه پیش تمام شد";
                                            exit();
                                        }
                                    } else {
                                        print "متاسفانه در ذخیره اطلاعات در جدول سبد خرید مشکلی وجود دارد";
                                        exit();
                                    }
                                }
                            } else {
                                print "متاسفانه در جدول محصولات با این آدرس محصولی ثبت نشده است";
                            }
                        } else {
                            print "متاسفانه در آبدیت آدرس ها مشکلی وجود دارد";
                            exit();
                        }
                    } else {
                        print "متاسفانه در جدول آدرس ها هیچ آیتمی ذخیره نشده است";
                        exit();
                    }
                }
            } else {
                print "متاسفانه در صدور فاکتور مشکلی بوجود آمده است";
                exit();
            }
        } else {
            print "اطلاعات لازم به سرور ارسال نشده است";
            exit();
        }

    }

    public function actionMyorders()
    {

        $Mbag = new Tblbag();
        $Mpro = new Tblproduct();
        $Mallpost = new Tblallpost();
        $jdf = new jdf();
        $bag = $Mbag->find()->where(["id_user" => yii::$app->user->id])->all();
        if ($bag != null) {
            $result["result"] = 1;
            foreach ($bag as $rowb) {
                $pro = $Mpro->find()->where(["id" => $rowb->id_pro])->one();
                $allpost = $Mallpost->find()->where(["id" => $rowb->id_all_post])->one();
                if ($pro != null && $allpost != null) {
                    $arr["name"] = $pro->name;
                    $arr["price"] = $pro->price_namayande;
                    $arr["id"] = $pro->id;
                    $url = yii::$app->request;
                    $arr["url"] = $url->hostInfo . '/upload/' . $pro->img;
                    $date = explode("-", $rowb->date);
                    $dateir = $jdf->gregorianToJalali($date[0], $date[1], $date[2]);
                    $arr["date"] = $dateir;
                    if ($rowb->id_fac == 0 | $rowb->id_fac == null) {
                        $arr["factor"] = $allpost->id_fac;
                    } else {
                        $arr["factor"] = $rowb->id_fac;
                    }
                    $arr["costomer"] = $allpost->costomer;
                    $arr["pr_post"] = $allpost->price_post;

                } else {
                    $arr["name"] = "محصول یا آدرس ارسال حذف شده است";
                    $arr["price"] = 0000;
                    $arr["id"] = $rowb->id_pro;
                    $arr["url"] = "no url";
                }
                $fact = new TblSodorFactor();
                $fac = $fact->findOne(['id' => $rowb->id_fac]);

          if ($rowb->down_buy != 0 && $fac != null && $fac->resive == 0) {
                    $arr["status"] = "سفارش در حال ارسال  است";
                } else if ($rowb->down_buy != 0 && $fac != null && $fac->resive == 1) {
                    $arr["status"] = "سفارش به آدرس شما ارسال شده است";
                }else
                if ($rowb->down_buy == 0 && $rowb->id_fac == 0) {
                    $arr["status"] = "سفارش در سبد خرید شما منتظر است";
                }
                $result["array"][] = $arr;
            }
            return $result;
        } else {
            $result["result"] = "شما هیچ سفارش خریدی ندارید";
            return $result;
        }
    }


    public function actionReject()
    {
        if (isset($_POST['id_bag']) && $_POST['id_bag'] != null && isset($_POST['txt']) && $_POST['txt']) {
            $rej = new Tblreplace();
            $Tbag = new Tblbag();
            $id_bag = intval($_POST['id_bag']);
            $bag = $Tbag->findOne(["id" => $id_bag]);
            $rej->id_user = yii::$app->user->id;
            if ($bag != null) {
                $rej->id_pro = $bag->id_pro;
                $rej->id_fac = $bag->id_fac;
            } else {
                $rej->id_pro = 0;
                $rej->id_fac = 0;
            }
            $rej->text_user = $_POST['txt'];
            $rej->category = 0;
            $rej->confirm = 0;
            $rej->enabel_view = 1;
            $rej->id_bag = $id_bag;
            if ($rej->save()) {
                print "1";
            } else {
                print "در ذخیره اطلاعات مشکلی وجود دارد";
            }

        } else {
            print "اطلاعات ارسالی به سرور اشتباه است";
        }

    }

    public function actionListreject()
    {

        $fact = new TblSodorFactor();
        $date = date('Y-m-d');
        $newdate = strtotime('-10 day', strtotime($date));
        $newdate1 = date('Y-m-d', $newdate);
        $jdf = new jdf();
        $Mbag = new Tblbag();
        $Mallpost = new Tblallpost();
        $Mpro = new Tblproduct();
        $fac = $fact->find()->where('data >= :date1', [':date1' => $newdate1])->andWhere('data <= :date', [':date' => $date])->andWhere(["id_user" => yii::$app->user->id])->andWhere(["resive" => 1])->andWhere(["visibel" => 1])->andWhere(["print" => 1])->all();
        if ($fac != null) {
            $i = 0;
            foreach ($fac as $valu) {
 
                $bag = $Mbag->find()->where(["id_fac" => $valu->id])->all();


                if ($bag != null) {
                    $result["result"] = 1;
                    foreach ($bag as $rowb) {
                        $pro = $Mpro->find()->where(["id" => $rowb->id_pro])->one();
                        $allpost = $Mallpost->find()->where(["id" => $rowb->id_all_post])->one();
                        if ($pro != null && $allpost != null) {
                            $arr["name"] = $pro->name;
                            $arr["price"] = $pro->price_namayande;
                            $arr["size"] = $rowb->size;
                            $arr["color"] = $rowb->color;
                            $arr["id_bag"] = $rowb->id;
                            $arr["id_fac"] = $valu->id;
                            $arr["id"] = $pro->id;
                            $url = yii::$app->request;
                            $arr["url"] = $url->hostInfo . '/upload/' . $pro->img;
                            $date = explode("-", $rowb->date);
                            $dateir = $jdf->gregorianToJalali($date[0], $date[1], $date[2]);
                            $arr["date"] = $dateir;
                            if ($rowb->id_fac == 0 | $rowb->id_fac == null) {
                                $arr["factor"] = $allpost->id_fac;
                            } else {
                                $arr["factor"] = $rowb->id_fac;
                            }
                            $arr["costomer"] = $allpost->costomer;
                            $arr["pr_post"] = $allpost->price_post;

                        } else {
                            $arr["name"] = "محصول یا آدرس ارسال حذف شده است";
                            $arr["price"] = 0000;
                            $arr["id"] = $rowb->id_pro;
                            $arr["url"] = "no url";
                        }
                        if ($rowb->down_buy != 0 && $rowb->id_fac != 0) {
                            $arr["status"] = "سفارش قبلا برای شما ارسال شده است";
                        } else {
                            $arr["status"] = "سفارش در سبد خرید شما در انتظار است";
                        }
                        $result["array"][] = $arr;

                    }

                } else {
                    $result["result"] = "شما هیچ سفارش خریدی ندارید";

                }

            }
        } else {
            $result["result"] = "0";
            return $result;
        }

        return $result;

    }


 


   


    public function actionGetdatabuy()
    {


        if ($_POST['id_pro'] != null && isset($_POST['id_pro'])
            && $_POST['count'] != null && isset($_POST['count'])
            && $_POST['size'] != null && isset($_POST['size'])
            && $_POST['color'] != null && isset($_POST['color'])
            && $_POST['price'] != null && isset($_POST['price'])
            && $_POST['adress'] != null && isset($_POST['adress'])
            && $_POST['nameget'] != null && isset($_POST['nameget'])
            && $_POST['tellget'] != null && isset($_POST['tellget'])
            && $_POST['type_post'] != null && isset($_POST['type_post'])

        ) {
                        $count = $_POST['count'];
                     switch ($count){
                case "۱" :
                    $count = "1";
                    break;
                case "۲" :
                    $count = "2";
                    break;
                case "۳" :
                    $count = "3";
                    break;
                case "۴" :
                    $count = "4";
                    break;
                case "۵" :
                    $count = "5";
                    break;
                case "۶" :
                    $count = "6";
                    break;
                case "۷" :
                    $count = "7";
                    break;
                case "۸" :
                    $count = "8";
                    break;
                case "۹" :
                    $count = "9";
                    break;
                case "۰" :
                    $count = "1";
                    break;

            }
            if($count == 0 | $count <0){
                $count = 1;
            }
            $Mpro = new Tblproduct();
            $pm = $Mpro->find()->where(['id'=>intval($_POST['id_pro'])])->one();
            $type_Post = $_POST['type_post'];
            $price_post = 0;
            switch ($type_Post) {
                case "post":
                    $price_post = 12000;
                    $type_Post = "post";
                    break;
                case "payk":
                    $price_post = 15000;
                    $type_Post = "paik";
                    break;
                case "tipax":
                    $price_post = 0;
                    $type_Post = "tipx";
                    break;
            }
            $price = 0;
            $c = intval($count);
            $p = intval($pm->price_namayande);
            $price = ($c * $p)  + $price_post;
            $adress = new Tblallpost();
            $adress->address = $_POST['adress'];
            $adress->name_post = $type_Post;
            $adress->price_post = $price_post;
            $adress->category = 1;
            $adress->costomer = $_POST['nameget'];
            $adress->tel = $_POST['tellget'];
            $adress->price = $price;
 
            $adress->id_user = yii::$app->user->id;
            $adress->down_buy = 0;
          
            if ($adress->save(false)) {
            
                $model = new Tblbag();
                $model->id_user = yii::$app->user->id;
                $model->id_pro = (int)$_POST["id_pro"];
                $model->count = (int)$count;
                $data = new jdf();
                $model->date_ir = $data->date('y/m/d');
                $model->date = date('Y/m/d');
                $model->id_fac = 0;
                $model->down_buy = 0;
                $model->price = ($c * $p);
                $model->enabel = 1;
                $model->enable_view = 1;
                $model->size = $_POST['size'];
                $model->color = $_POST['color'];
                $model->id_all_post = $adress->id;
                if ($model->save()) {
                    print "1";
                } else {
                    print "در ذخیره اطلاعات در جدول سبد خرید مشکلی وجود دارد";
                    exit;
                }
            } else {
                print "در ذخیره اطلاعات در جدول ثبت آدرس مشکلی وجود دارد";
                exit;
            }
        } else {
            print "اطلاعات ارسالی اشتباه است";
            exit;
        }


    }

    public function actionCart()
    {

        $fact = new TblSodorFactor();
        $fac = $fact->find()->andWhere(["id_user" => yii::$app->user->id])->andWhere(['print' => 0])->andWhere(['resive' => 0])->all();
        if ($fac != null) {
            foreach ($fac as $facvar) {
                $mod = new Tblbag();
                $adress = new Tblallpost();
                $adres = $adress->find()->andWhere(["id_user" => yii::$app->user->id])->andWhere(["id_fac" => $facvar->id])->all();
                if ($adres != null) {

                    foreach ($adres as $adr) {
                        $res = $mod->find()->where(["enabel" => 1])->andWhere(["id_all_post" => $adr->id])->andWhere(["id_user" => yii::$app->user->id])->all();
                        $adrr["id"] = $adr->id;
                        $adrr["address"] = $adr->address;
                        $adrr["price_post"] = $adr->price_post;
                        $adrr["costomer"] = $adr->costomer;
                        $adrr["tel"] = $adr->tel;
                        $adrr["price"] = $adr->price;

                        $j = 0;
                        if ($res != null) {
                            foreach ($res as $row) {
                                $j++;
                                $result["id"] = $row->id;
                                $result["id_pro"] = $row->id_pro;
                                $result["date"] = $row->date;
                                $result["date_ir"] = $row->date_ir;
                                $result["size"] = $row->size;
                                $result["color"] = $row->color;
                                $result["price"] = $row->price;
                                $bag[] = $result;
                            }
                        } else {
                            $bage = "-2";

                        }
                        if ($res != null) {
                            $adrr["bag"] = $bag;
                        } else {
                            $adrr["bag"] = $bage;
                        }

                        $adrr["countPost"] = $j;

                        $send[] = $adrr;

                    }
                    
                } else {
                    
                }
                
            }

        }

        $mod = new Tblbag();
        $adress = new Tblallpost();
        $adres = $adress->find()->andWhere(["down_buy" => 0])->andWhere(["id_user" => yii::$app->user->id])->all();
        if ($adres != null) {

            foreach ($adres as $adr) {
                $res = $mod->find()->where(["enabel" => 1])->andWhere(["id_all_post" => $adr->id])->andWhere(["down_buy" => 0])->andWhere(["id_fac" => 0])->andWhere(["id_user" => yii::$app->user->id])->all();
                $adrr["id"] = $adr->id;
                $adrr["address"] = $adr->address;
                $adrr["price_post"] = $adr->price_post;
                $adrr["costomer"] = $adr->costomer;
                $adrr["tel"] = $adr->tel;
                $adrr["price"] = $adr->price;

                $j = 0;
                if ($res != null) {
                    foreach ($res as $row) {
                        $j++;
                        $result["id"] = $row->id;
                        $result["id_pro"] = $row->id_pro;
                        $result["date"] = $row->date;
                        $result["date_ir"] = $row->date_ir;
                        $result["size"] = $row->size;
                        $result["color"] = $row->color;
                        $result["price"] = $row->price;
                        $bag[] = $result;
                    }
                } else {
                    $bage = "-2";

                }
                if ($res != null) {
                    $adrr["bag"] = $bag;
                } else {
                    $adrr["bag"] = $bage;
                }

                $adrr["countPost"] = $j;

                $send[] = $adrr;

            }

        } else {
           
        }
        return $send;


    }


    public function actionSignup()
    {
        $p = Yii::$app->getRequest()->getBodyParams();
        if (isset($_POST['username']) && $_POST['username'] != null 
            && isset($_POST['password']) && $_POST['password'] != null 
            && isset($_POST['name']) && $_POST['name'] != null) {
            if (isset($_POST['reagent'])) {
                if ($_POST['reagent'] != null) {
                    if ($p['reagent'] != null) {
                        $check_re = new TblProfile();
                        $check_re = $check_re->find()->where(['cod_himself' => $p['reagent']])->all();
                        if ($check_re == null) {
                            print "2";
                            exit;
                        }
                    }
                }

            }
            $user = User::findByUsername($_POST['username']);
            if ($user != null) {
                print "6";
                exit;
            }

            $user = new User();
            $user->username = $p['username'];
            $user->email = $p['username'];
            //$user->name=$this->name;
            $user->setPassword($p['password']);
            $user->generateAuthKey();
            $auth = Yii::$app->authManager;
            $authorRole = $auth->getRole("user");
            if (!$user->save(false)) {
                print "3";
                exit;
            }
            $auth->assign($authorRole, $user->getId());
            $profile = new TblProfile();
            $profile->name = $p['name'];
            $profile->id_user = $user->getId();
            $profile->cod_himself = substr(md5(microtime()), rand(0, 26), 5);
            $profile->enabel_view = 1;
            $profile->enabel = 1;
            if (isset($_POST['reagent'])) {
                if ($_POST['reagent'] != null) {
                    if ($p['reagent'] != null) {
                        $profile->Reagent = $p['reagent'];
                        //1 معرف دارد پرداخت نشده 2 معرف دارد پرداخت شده 0 معرف ندارد
                        $profile->Paid = "1";
                        $profile->charge = '5';
                    }
                } else {
                    $profile->Reagent = "does not have";
                    $profile->Paid = "0";
                    $profile->charge = '10';
                }
            } else {
                $profile->Reagent = "does not have";
                $profile->Paid = "0";
                $profile->charge = '10';
            }


            $profile->stock = '0';
            if (Yii::$app->getUser()->login($user)) {
                print "5";
                exit;
            } else {
                print "4";
                exit;
            }
        } else {
            print "1";
        }
        // return "ok".$p['username'];
    }

    public function actionLogin()
    {

        $p = Yii::$app->getRequest()->getBodyParams();
        if (isset($_POST['username']) && $_POST['username'] != null && isset($_POST['pass']) && $_POST['pass'] != null) {
            $username = $p['username'];
            $password = $p['pass'];
            $user = User::findByUsername($username);
            if ($user != null) {
                if ($user->validatePassword($password)) {
                    Yii::$app->getUser()->login($user);
                    print "1";
                    exit;
                } else {
                    print "2";
                    exit;
                }
            } else {
                print "2";
                exit;
            }

        } else {
            print "3";
        }
    }

    public function actionTest2()
    {
        print "2";
    }
}